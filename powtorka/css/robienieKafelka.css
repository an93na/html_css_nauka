.kafelek {
  display: inline-block;
  background-image: url("../img/gacek.jpg");
  width: 300px;
  height: 200px;
  position: relative;
  /* samo napiasanie tego nie powoduje żadnej zmiany, dopiero jeśli 
    jakies elementy absolute będą się w nim znajdować to 
    wtedy będzie coś się dziać. Chyba że damy jakies top left itd */

  /* rozciąganie do zadanej szerokości żeby nasz obrazek sie nie powielał */
  /* niepowtarzaj tła */
  background-repeat-x: no-repeat;
  background-repeat-y: no-repeat;
  /* wpływamy na rozmiar pojedyńczego obrazka z background 
        chce żeby mój obrazek był dopasowany do szerokości*/
  background-size: 100% auto;
  /* możemy wycentorować nasz obrazek przeuwać jego środek */
  background-position-y: 50%;
  margin: 20px;
}

.kafelek__kot {
  background-image: url("../img/1.jpg");
}
.kafelek__duzy {
  width: 450px;
}

.kafelek--nadtytul {
  background-color: rgb(197, 38, 38);
  color: white;
  padding: 10px;
  width: 50%; /*szerokość 50% kontenera nadrzędnego*/
  position: absolute;
  bottom: 80px;
  left: 20px;
}

.kafelek--tytul {
  font-size: 20p /*20 punktów*/;
  font-weight: bold;
  color: whitesmoke;
  text-decoration: none;
  padding: 10px;
  position: absolute;
  left: 20px;
  bottom: 45px;
}

/* jesli są dwa podkreślenia to 
sygnalizujemy że to jest odmiana
tego orginalnego tytułu. Musi wystąpić 
nazwa bloku i nazwa elemntu*/
.kafelek--tytul__odmiana {
  color: rgb(200, 31, 31);
}

.kafelek--tytul:hover {
  text-decoration: underline;
  cursor: pointer;
}

.kafelek--wprowadzenie {
  color: black;
  font-weight: normal;
  padding: 5px;
  background-color: rgba(255, 255, 255, 0.4);
  position: absolute;
  bottom: 5px;
  left: 25px;
  right: 25px;
  margin-bottom: 0px;
  font-weight: bold;
}

/* bem 
mamy jakąś strukturę i mamy jakiś element
i nazywamy go i tutaj pierwszy jest nazwa ogólna
a potem poszczególne elementy z nazwą tego bloku 
na początku. */

/*
Domyślnie wszystkie elementy mają position static
position  - służy do wytrącenia elementów z jego
normalnego biegu 
jeżeli mamy position relative to możemy przemieszczać 
ten element musimy użyć do tego position releativ jeszcze
top bottom right left. np 
position: relative;
top: 10px; mówi wyświetl się z danym offsetem zadanego kierunku
te offset jest względem tego miejsca gdzie by się naturalnie wyświetlił.
Ile należy przenieśc ten element punktów w dół względem pozycji którą miał 
wcześniej.
pozycjonowanie fixed mówi wyświetl się z takim offsetem względem krawędzi ekranu. 
To pozycjonowanie całkowicie wyrywa element z dokumentu
ten element stoi nam w pewnym położeniu mimo że my przesuwamy kafelek na dół.
Np menu żeby było cały czas widoczne
Position relative nie zwalnia swojego miejsca w orginalnym miejscu w dokumencie

 */

.kafelki {
  /* flex steruje przepływem elementów w kontenerze
    w jaki sposób te elementy są wyświetlane */
  display: flex;
  /* domyslnie jest na nowrap czyli sa w jednej lini 
    a ta wrap powoduje przenoszenie elementu do nowej lini
    jesli się nie mieszczą */
  flex-wrap: wrap;
  /* możemy też sterować biegiem elemetów dzieki flex-direction */

  /* młówimy żeby ustawił się pomiędzy kolejnymi liniami siadki */
  /* chciałabym aby ten element został umieszczony pomiędzy liniami 
  kolumn */
  grid-column: zajawkistart / zajawkistop;
  grid-row: dolstart / dolstop;
}

.maingrid {
  display: grid;
  /*siadki pionowe: [nazwa najbardziej wysuniętej na lewo siadki] odstęp między liniami siadki [klejna siadka] */
  grid-template-columns: [lewastart] 100px [lewastop zajawkistart] auto [zajawkistop prawastart] 200px [prawastop];
  /*siadki poziome*/
  grid-template-rows: [gorastart] 100px [gorastop dolstart] auto [dolstop];
}
/* dwie nazwy w nawiasie oznaczają tą samą linię np [lewastop zajawkistart] ale te nazwy można używać wymiennie */
